buildscript {
//	ext {
//		grailsVersion = project.grailsVersion
//	}
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
//		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
	}
}

version "1.4.0.BUILD-SNAPSHOT"
group = 'org.grails.plugins'

apply plugin:"eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

//ext {
//	grailsVersion = project.grailsVersion
//	gradleWrapperVersion = project.gradleWrapperVersion
//}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.grails.org/grails/core" }
}

//dependencyManagement {
//	imports {
//		mavenBom "org.grails:grails-bom:$grailsVersion"
//	}
//	applyMavenExclusions false
//}
configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	compile "org.springframework.boot:spring-boot-starter-logging"
	compile "org.springframework.boot:spring-boot-autoconfigure"
	compile "org.grails:grails-core"
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "org.springframework.boot:spring-boot-starter-tomcat"
	compile "org.grails:grails-web-boot"
	compile "org.grails:grails-logging"
	compile "org.grails:grails-plugin-rest"
	compile "org.grails:grails-plugin-databinding"
	compile "org.grails:grails-plugin-i18n"
	compile "org.grails:grails-plugin-services"
	compile "org.grails:grails-plugin-url-mappings"
	compile "org.grails:grails-plugin-interceptors"
	compile "org.grails.plugins:cache"
	compile "org.grails.plugins:async"
	compile "org.grails.plugins:scaffolding"
	compile "org.grails.plugins:gsp"
	compileOnly "io.micronaut:micronaut-inject-groovy"
	console "org.grails:grails-console"
	profile "org.grails.profiles:web-plugin"
	runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
	testCompile "org.grails:grails-gorm-testing-support"
	testCompile "org.mockito:mockito-core"
	testCompile "org.grails:grails-web-testing-support"
//	testCompile "org.grails:grails-plugin-testing"


	compile 'com.github.scribejava:scribejava-apis:6.8.1'
	console "org.grails:grails-console"

	provided 'javax.servlet:javax.servlet-api:3.1.0'
//	provided 'org.grails:grails-dependencies'
//	provided 'org.grails.plugins:spring-security-core:3.2.+'
    compile 'org.grails.plugins:spring-security-core:4.0.+'
//	provided "org.grails:grails-plugin-services"

//	runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"

	testCompile "cglib:cglib-nodep:2.2.2"
//	testCompile "org.grails:grails-plugin-testing"
//	testCompile "org.grails:grails-web-testing-support"
}

//task wrapper(type: Wrapper) {
//	gradleVersion = gradleWrapperVersion
//}

//grailsPublish {
//	user = System.getProperty("BINTRAY_USER")
//	key = System.getProperty("BINTRAY_KEY")
//	githubSlug = 'grails-plugins/grails-spring-security-oauth2'
//	license {
//		name = 'Apache-2.0'
//	}
//	title = "Spring Security OAuth2"
//	desc = """
//	This plugin provides the capability to authenticate via oauth in Grails 3.3+. Depends on grails-spring-security-core.
//
//	Grails 3.3+: Use 1.3+
//
//	Grails 3.0-3.2: Use v1.2.x
//	Start v1.2.x as of fork to grails-plugins organization (This includes 1.1.1 which was not fully release previously.
//"""
//	developers = [
//		MatrixCrawler: "Johannes Brunswicker",
//		aitmanas: "aitmanas",
//		rvanderwerf: "Ryan Vanderwerf"
//	]
//	userOrg = 'grails'
//}
//
bootRun {
	jvmArgs(
			'-Dspring.output.ansi.enabled=always',
			'-noverify',
			'-XX:TieredStopAtLevel=1',
			'-Xmx1024m')
	sourceResources sourceSets.main
	String springProfilesActive = 'spring.profiles.active'
	systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false
grailsPublish {
	// TODO: Provide values here
	user = 'user'
	key = 'key'
	githubSlug = 'foo/bar'
	license {
		name = 'Apache-2.0'
	}
	title = "My Plugin"
	desc = "Full plugin description"
	developers = [johndoe:"John Doe"]
}


assets {
	packagePlugin = true
}

